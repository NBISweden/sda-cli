version: "3.7"
services:
  s3_backend:
    command: server /data
    container_name: s3
    environment:
      - MINIO_ACCESS_KEY=ElixirID
      - MINIO_SECRET_KEY=987654321
    healthcheck:
      test: ["CMD", "curl", "-fkq", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 3
    image: minio/minio:RELEASE.2021-02-14T04-01-33Z
    ports:
      - "9000:9000"
    volumes:
      - data:/data
  createbucket:
    container_name: buckets
    image: minio/mc:RELEASE.2021-02-14T04-28-06Z
    depends_on:
      - s3_backend
    entrypoint: >
      /bin/sh -c "
      /bin/sleep 30;
      /usr/bin/mc config host add s3 http://s3:9000 ElixirID 987654321;
      /usr/bin/mc rm -r --force s3/test;
      /usr/bin/mc mb s3/test;
      /usr/bin/mc mb s3/download;
      /usr/bin/mc policy set public s3/download;
      "
  rabbitmq:
    image: ghcr.io/neicnordic/sensitive-data-archive:${TAG}-rabbitmq
    container_name: rabbitmq
    environment:
     - RABBITMQ_DEFAULT_PASS=test
     - RABBITMQ_DEFAULT_USER=test
     - MQ_VHOST=sda
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "bash", "-c", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"]
      interval: 5s
      timeout: 120s
      retries: 10
  s3_proxy:
    image: "ghcr.io/neicnordic/sensitive-data-archive:${TAG}"
    command: [ sda-s3inbox ]
    container_name: proxy
    depends_on:
      rabbitmq:
        condition: service_healthy
      s3_backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    environment:
      - LOG_LEVEL=info
      - INBOX_URL=http://s3
      - INBOX_PORT=9000
      - INBOX_ACCESSKEY=ElixirID
      - INBOX_SECRETKEY=987654321
      - INBOX_BUCKET=test
      - INBOX_REGION=us-east-1
      - INBOX_READYPATH=/minio/health/ready
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=rootpasswd
      - DB_DATABASE=sda
      - DB_SSLMODE=disable
      - BROKER_HOST=rabbitmq
      - BROKER_USER=test
      - BROKER_PASSWORD=test
      - BROKER_PORT=5672
      - BROKER_VHOST=sda
      - BROKER_EXCHANGE=sda
      - BROKER_ROUTINGKEY=inbox
      - BROKER_SSL=False
      - SERVER_JWTPUBKEYPATH=/keys/
      - LOG_FORMAT=json
    volumes:
      - ./keys/:/keys/
    ports:
      - "8000:8000"
      - "8001:8001"
  postgres:
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=rootpasswd
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 2s
      retries: 6
    image: ghcr.io/neicnordic/sensitive-data-archive:${TAG}-postgres
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
volumes:
  data:
  dbdata:
